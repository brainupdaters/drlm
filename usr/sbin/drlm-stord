#!/bin/bash
#
# drlm-stord    This shell script takes care of starting and stopping
#               the DRLM Store Service.
#
# DEBIAN
# update-rc.d drlm-stord defaults 10 06
#
# RHEL
# chkconfig: - 29 61
#
# Description:       DRLM is a central Disaster Recovery Manager
#                    for Linux OS. This service provides DR Images
#                    Store Service available for Recover configured
#                    servers in your network.

### BEGIN INIT INFO
# Provides:          drlm-stord
# Required-Start:    $local_fs $remote_fs
# Required-Stop:     $local_fs $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: DRLM Store Service
# Description:       DRLM is a central Disaster Recovery Manager
#                    for Linux OS. This service provides DR Images
#                    Store Service available for Recover configured
#                    servers in your network.
### END INIT INFO

# What is this?
DESC="DRLM Store Service"
SHARE_DIR="/usr/share/drlm"
source $SHARE_DIR/conf/default.conf
[ -f /etc/drlm/site.conf  ] && source /etc/drlm/site.conf
[ -f /etc/drlm/local.conf ] && source /etc/drlm/local.conf
source $SHARE_DIR/lib/dbdrv/$DB_BACKEND-driver.sh
source $SHARE_DIR/lib/backup-functions.sh
source $SHARE_DIR/lib/nfs-functions.sh
RETVAL=0

# Only root can start the service
uid=`id | cut -d\( -f1 | cut -d= -f2`
[ $uid -ne 0 ] && exit 4

# Exit if required binaries are missing.
[ -x /usr/sbin/drlm ] || exit 0
[ -x /sbin/losetup  ] || exit 0
[ -x /bin/mount     ] || exit 0
[ -x /bin/umount    ] || exit 0

# Exit if required files are missing.
[ -f /var/lib/drlm/drlm.sqlite ] || exit 0

# Get OS type
[ -f /etc/redhat-release ] && OSTYPE="RedHat"
[ -f /etc/debian_version ] && OSTYPE="Debian"
[ -f /etc/SuSE-release   ] && OSTYPE="SuSE"

# Be sure loop module is loaded
#$(/sbin/modprobe -q loop) || exit 0

function get_err ()
{
	if [ $1 -eq 0 ]; then
	return 0
	else
	return 1
	fi
}

disable_loop_stord () {
	local LO_DEV=$1

	/sbin/losetup -d ${LO_DEV} >> /dev/null 2>&1
	if [ $? -eq 0 ]; then sleep 1; return 0; else return 1; fi
}

do_mount_stord() {
	local FS_DEV="/dev/loop${1}"
	local CLI=$2

	/bin/mount -o ro ${FS_DEV} ${STORDIR}/${CLI} >> /dev/null 2>&1
	if [ $? -eq 0 ]; then sleep 1; return 0; else return 1; fi
}

do_umount_stord() {
	local FS_DEV=$1

	/bin/umount ${FS_DEV} >> /dev/null 2>&1
	if [ $? -eq 0 ]; then sleep 1; return 0; else return 1; fi
}

do_configure_nfs(){
	configure_nfs_exports
	reload_nfs
}
do_unconfigure_nfs(){
	unconfigure_nfs_exports
	reload_nfs
}

case "$OSTYPE" in
	RedHat)
		# Source function library.
		. /etc/rc.d/init.d/functions
		;;

	Debian)
		# Source function library.
		. /lib/lsb/init-functions
		;;

	*)
		log_warning_msg "$DESC not yet suported on this Linux Distribution!"
		RETVAL=2
		exit $RETVAL
		;;

esac

case "$1" in
	start)
		if [ ! -d $VAR_DIR/run ]; then
			mkdir $VAR_DIR/run
		fi  
		drlm-api &
		echo $! > $VAR_DIR/run/drlm-api.pid

		case "$OSTYPE" in
			SuSE)			
				echo $"Starting $DESC: "
				for line in $(get_active_backups)
				do
					cli_id=$(echo ${line} | awk -F":" '{ print $2 }')
					dr_file=$(echo ${line} | awk -F":" '{ print $3 }')
					cli_name=$(echo ${dr_file}| cut -d"." -f1)
					echo "Enabling Loop device: /dev/loop${cli_id}: "
					enable_loop_ro ${cli_id} ${dr_file}
					rval=$?
					[ $rval -ne 0 ] && RETVAL=$rval
					echo "Mounting DR Image: ${dr_file}: "
					do_mount_stord ${cli_id} ${cli_name}
					rval=$?
					[ $rval -ne 0 ] && RETVAL=$rval
				done
				echo "Configuring NFS exports" 
				do_configure_nfs
				rval=$?
				[ $rval -ne 0 ] && RETVAL=$rval

				[ $RETVAL -ne 0 ] && exit $RETVAL
				;;

			RedHat)
				echo $"Starting $DESC: "
				for line in $(get_active_backups)
				do
					cli_id=$(echo ${line} | awk -F":" '{ print $2 }')
					dr_file=$(echo ${line} | awk -F":" '{ print $3 }')
					cli_name=$(echo ${dr_file}| cut -d"." -f1)
					action $"Enabling Loop device: /dev/loop${cli_id}: " enable_loop_ro ${cli_id} ${dr_file}
					rval=$?
					[ $rval -ne 0 ] && RETVAL=$rval
					action $"Mounting DR Image: ${dr_file}: " do_mount_stord ${cli_id} ${cli_name}
					rval=$?
					[ $rval -ne 0 ] && RETVAL=$rval
				done
				action $"Configuring NFS exports" do_configure_nfs
				rval=$?
				[ $rval -ne 0 ] && RETVAL=$rval
				
				[ $RETVAL -ne 0 ] && exit $RETVAL
				;;
				
			Debian)
				echo "[....] Starting $DESC:."
				for line in $(get_active_backups)
				do
					cli_id=$(echo ${line} | awk -F":" '{ print $2 }')
					dr_file=$(echo ${line} | awk -F":" '{ print $3 }')
					cli_name=$(echo ${dr_file}| cut -d"." -f1)
					log_begin_msg "Enabling Loop device: /dev/loop${cli_id} for $DESC..."
					enable_loop_ro ${cli_id} ${dr_file}
					rval=$?
					[ $rval -ne 0 ] && RETVAL=$rval
					log_end_msg $rval
					log_begin_msg "Mounting DR Image: ${dr_file} for $DESC..."
					do_mount_stord ${cli_id} ${cli_name}
					rval=$?
					[ $rval -ne 0 ] && RETVAL=$rval
					log_end_msg $rval
				done
				log_begin_msg "Configuring NFS exports"
				do_configure_nfs
				rval=$?
				[ $rval -ne 0 ] && RETVAL=$rval
				log_end_msg $rval
				log_daemon_msg "Starting $DESC"
				[ $RETVAL -ne 0 ] && {
					log_end_msg $RETVAL
					exit $RETVAL
				}
				log_end_msg 0
				;;
		esac
		;;

	stop)
		kill $(cat $VAR_DIR/run/drlm-api.pid)
		rm $VAR_DIR/run/drlm-api.pid

		case "$OSTYPE" in
			SuSE)
				echo $"Shutting down $DESC: "
				echo "Unconfiguring NFS exports" 
				do_unconfigure_nfs
				rval=$?
				[ $rval -ne 0 ] && RETVAL=$rval
				for lo_dev in $(mount -l |egrep "loop|.dr" | grep -w "ro" | awk '{print $1}')
				do
					if [ -z "${lo_dev##*.dr*}" ]; then
						LO_DEV=$(losetup -a | grep $lo_dev | awk -F':' '{print $1}')
					else
						LO_DEV=$lo_dev
					fi
					echo "Umounting DR Images: "
					do_umount_stord ${LO_DEV}
					rval=$?
					[ $rval -ne 0 ] && RETVAL=$rval
					echo "Disabling Loop devices: "
					disable_loop_stord ${LO_DEV}
					rval=$?
					[ $rval -ne 0 ] && RETVAL=$rval
				done
				[ $RETVAL -ne 0 ] && exit $RETVAL
				;;

			RedHat)
				echo $"Shutting down $DESC: "
				action $"Unconfiguring NFS exports" do_unconfigure_nfs
				rval=$?
				[ $rval -ne 0 ] && RETVAL=$rval
				for lo_dev in $(mount -l |egrep "loop|.dr"| grep -w "ro" | awk '{print $1}')
				do
					if [ -z "${lo_dev##*.dr*}" ]; then
						LO_DEV=$(losetup -a | grep $lo_dev | awk -F':' '{print $1}')
					else
						LO_DEV=$lo_dev
					fi
					action $"Umounting DR Images: " do_umount_stord ${LO_DEV}
					rval=$?
					[ $rval -ne 0 ] && RETVAL=$rval
					action $"Disabling Loop devices: " disable_loop_stord ${LO_DEV}
					rval=$?
					[ $rval -ne 0 ] && RETVAL=$rval
				done
				[ $RETVAL -ne 0 ] && exit $RETVAL
				;;

			Debian)
				echo "[....] Stopping $DESC:."
				log_begin_msg "Unconfiguring NFS exports"
				do_unconfigure_nfs
				rval=$?
				[ $rval -ne 0 ] && RETVAL=$rval
				log_end_msg $rval
				for lo_dev in $(mount -l |egrep "loop|.dr"| grep -w "ro" | awk '{print $1}')
				do
					if [ -z "${lo_dev##*.dr*}" ]; then
						LO_DEV=$(losetup -n -a | grep $lo_dev | awk -F':' '{print $1}')
					else
						LO_DEV=$lo_dev
					fi
					log_begin_msg "Umounting DR Images for $DESC..."
					do_umount_stord ${LO_DEV}
					rval=$?
					log_end_msg $rval
					[ $rval -ne 0 ] && RETVAL=$rval
					log_begin_msg "Disabling Loop devices for $DESC..."
					disable_loop_stord ${LO_DEV}
					rval=$?
					log_end_msg $rval
					[ $rval -ne 0 ] && RETVAL=$rval
				done
				log_daemon_msg "Stopping $DESC"
				[ $RETVAL -ne 0 ] && {
					log_end_msg $RETVAL
					exit $RETVAL
				}
				log_end_msg 0
				;;
		esac
		;;

	status)
		case "$OSTYPE" in
			SuSE)
				UP=$(/bin/mount -l|egrep "loop|.dr"|grep iw "ro"|wc -l)
				if [ $UP -gt 0 ]; then
					RETVAL=0
					echo "Getting Status from $DESC: "
					get_err $RETVAL
					printf '%-15s\n' "$(tput bold)"
					printf '%-15s %-10s %-35s %-50s\n' "Loop Dev." "FS Type" "DR Store" "DR File$(tput sgr0)"
					mount -l | egrep "loop|.dr" | grep -w "ro" | while read line;
					do
						if [ -z "${line##*loop*}" ]; then
							LO_DEV=$(echo -e $line | awk '{print $1}')
							DRFILE=$(losetup $LO_DEV | awk '{print $3}')
						else
							DRFILE=$(echo -e $line | awk '{print $1}')
							LO_DEV=$(losetup -a | grep $DRFILE | awk -F':' '{print $1}')
						fi
						MNTDIR=$(echo -e $line | awk '{print $3}')
						FSTYPE=$(echo -e $line | awk '{print $5}')
						printf '%-15s %-10s %-35s %-50s\n' $LO_DEV $FSTYPE $MNTDIR $DRFILE
					done
				else
					RETVAL=1
					echo "Getting Status from $DESC: "
					get_err $RETVAL
				fi
				[ $RETVAL -ne 0 ] && exit $RETVAL
				;;

			RedHat)

				UP=$(/bin/mount -l | egrep "loop | .dr" | grep -w "ro" | wc -l)
				if [ $UP -gt 0 ]; then
					RETVAL=0
					action $"Getting Status from $DESC: " get_err $RETVAL
					printf '%-15s\n' "$(tput bold)"
					printf '%-15s %-10s %-35s %-50s\n' "Loop Dev." "FS Type" "DR Store" "DR File$(tput sgr0)"
					mount -l | egrep "loop|.dr" | grep -w "ro" | while read line;
					do
						if [ -z "${line##*loop*}" ]; then
							LO_DEV=$(echo -e $line | awk '{print $1}')
							DRFILE=$(losetup $LO_DEV | awk '{print $3}')
						else
							DRFILE=$(echo -e $line | awk '{print $1}')
							LO_DEV=$(losetup -a | grep $DRFILE | awk -F':' '{print $1}')
						fi
						MNTDIR=$(echo -e $line | awk '{print $3}')
						FSTYPE=$(echo -e $line | awk '{print $5}')
						printf '%-15s %-10s %-35s %-50s\n' $LO_DEV $FSTYPE $MNTDIR $DRFILE
					done
				else
					RETVAL=1
					action $"Getting Status from $DESC: " get_err $RETVAL
				fi
				[ $RETVAL -ne 0 ] && exit $RETVAL
				;;

			Debian)
				log_daemon_msg "Getting Status from $DESC"
				UP=$(/bin/mount -l | egrep "loop|.dr" | grep -w "ro" | wc -l)
				if [ $UP -gt 0 ]; then
					RETVAL=0
					log_end_msg $RETVAL
					printf '%-15s\n' "$(tput bold)"
					printf '%-15s %-10s %-35s %-50s\n' "Loop Dev." "FS Type" "DR Store" "DR File$(tput sgr0)"
					/bin/mount -l | egrep "loop|.dr" | grep -w "ro" | while read line;
					do
						if [ -z "${line##*loop*}" ]; then
							LO_DEV=$(echo -e $line | awk '{print $1}')
							DRFILE=$(losetup $LO_DEV | awk '{print $3}')
						else
							DRFILE=$(echo -e $line | awk '{print $1}')
							LO_DEV=$(losetup -n -a | grep $DRFILE | awk -F':' '{print $1}')
						fi
						MNTDIR=$(echo -e $line | awk '{print $3}')
						FSTYPE=$(echo -e $line | awk '{print $5}')
						printf '%-15s %-10s %-35s %-50s\n' $LO_DEV $FSTYPE $MNTDIR $DRFILE
					done
				else
						RETVAL=1
						log_end_msg $RETVAL
				fi
				[ $RETVAL -ne 0 ] && exit $RETVAL
				;;
		esac
		;;

	restart | reload | force-reload)
		case "$OSTYPE" in
			SuSE | RedHat | Debian)
				$0 stop
				sleep 1
				$0 start
				;;
		esac
		;;

	*)
		case "$OSTYPE" in
			SuSE | RedHat)
				echo $"Usage: drlm-stord {start|stop|status|restart|reload|force-reload}"
				RETVAL=2
				;;

			Debian)
				log_success_msg "Usage: drlm-stord {start|stop|status|restart|reload|force-reload}"
				RETVAL=2
				;;
		esac
		;;

esac

exit $RETVAL
