#!/bin/sh
set -e

case "$1" in
  configure)
    # Create client config directory
    [ ! -d /etc/drlm/clients ] && mkdir /etc/drlm/clients
    [ ! -d /etc/drlm/alerts ] && mkdir /etc/drlm/alerts
    chmod 700 /etc/drlm

    # Create directory for rear client logs
    [ ! -d /var/log/drlm/rear ] && mkdir /var/log/drlm/rear
    chmod 700 /var/log/drlm
    chmod 775 /var/log/drlm/rear

    # Check if /etc/exports.d directory is present
    [ ! -d /etc/exports.d ] && mkdir /etc/exports.d && chmod 755 /etc/exports.d

    # Check if /etc/rsyncd.d directory is present
    [ ! -d /etc/drlm/rsyncd/rsyncd.d ] && mkdir /etc/drlm/rsyncd/rsyncd.d && chmod 755 /etc/drlm/rsyncd/rsyncd.d

    # Unpack GRUB files
    tar --no-same-owner -xzf /var/lib/drlm/store/boot/grub/grub2.04rc1_drlm_i386-pc_i386-efi_x86_64-efi_powerpc-ieee1275.tgz -C /var/lib/drlm/store/boot/grub
    # chmod 700 /var/lib/drlm/store
    
    # Check if drlm.key has been generated in older installations.
    if [ ! -f /etc/drlm/cert/drlm.key ]; then
        openssl req -newkey rsa:4096 -nodes -keyout /etc/drlm/cert/drlm.key -x509 -days 1825 -subj "/C=ES/ST=CAT/L=GI/O=SA/CN=$(hostname -s)" -out /etc/drlm/cert/drlm.crt
    fi
    
    # Update old database or create new one running drlm_db_version script.
    /usr/share/drlm/conf/DB/drlm_db_version.sh

    # Configure nbd
    /usr/share/drlm/conf/nbd/config-nbd.sh install

    ###########
    # Systemd #
    ###########

    # Disable current tftpd-hpa.service
    systemctl is-enabled --quiet tftpd-hpa.service && systemctl disable tftpd-hpa.service
    systemctl is-active --quiet tftpd-hpa.service && systemctl stop tftpd-hpa.service

    # Create user tftp if does not exists
    if ! getent passwd tftp2 > /dev/null 2>&1; then
      adduser --system --home /var/lib/drlm/store --no-create-home --quiet --gecos 'tftp daemon' --group tftp2
    fi

    # Stop previous drlm services if exists
    systemctl is-active --quiet drlm-stord.service && systemctl stop drlm-stord.service
    systemctl is-active --quiet drlm-api.service && systemctl stop drlm-api.service
    systemctl is-active --quiet drlm-proxy.service && systemctl stop drlm-proxy.service
    systemctl is-active --quiet drlm-rsyncd.service && systemctl stop drlm-rsyncd.service
    systemctl is-active --quiet drlm-tftpd.service && systemctl stop drlm-tftpd.service
    systemctl is-active --quiet drlm-stunnel.service && systemctl stop drlm-stunnel.service
    systemctl is-active --quiet drlm-gitd.service && systemctl stop drlm-gitd.service

    # Add systemd drlm services
    cp /usr/share/drlm/conf/systemd/drlm-stord.service /etc/systemd/system/
    if [ $(systemctl --version | head -n 1 | cut -d' ' -f2) -lt 229 ]; then
        sed -i "s/TimeoutSec=infinity/TimeoutSec=0/g" /etc/systemd/system/drlm-stord.service
    fi
    cp /usr/share/drlm/conf/systemd/drlm-api.service /etc/systemd/system/
    cp /usr/share/drlm/conf/systemd/drlm-proxy.service /etc/systemd/system/
    cp /usr/share/drlm/conf/systemd/drlm-rsyncd.service /etc/systemd/system/
    cp /usr/share/drlm/conf/systemd/drlm-tftpd.service /etc/systemd/system/
    cp /usr/share/drlm/conf/systemd/drlm-stunnel.service /etc/systemd/system/
    cp /usr/share/drlm/conf/systemd/drlm-gitd.service /etc/systemd/system/

    # Reload systemd services
    systemctl daemon-reload

    # Enable systemd services
    systemctl enable nfs-kernel-server.service
    systemctl enable rpcbind.service
    systemctl enable isc-dhcp-server.service

    # Enable drlm systemd services
    systemctl enable drlm-stord.service
    systemctl enable drlm-api.service
    systemctl enable drlm-proxy.service
    systemctl enable drlm-rsyncd.service
    systemctl enable drlm-tftpd.service
    systemctl enable drlm-stunnel.service
    systemctl enable drlm-gitd.service

    # Start drlm services
    systemctl start drlm-stord.service
    systemctl start drlm-api.service
    systemctl start drlm-proxy.service
    systemctl start drlm-rsyncd.service
    systemctl start drlm-tftpd.service
    systemctl start drlm-stunnel.service
    systemctl start drlm-gitd.service

    #################
    # DRLM services #
    #################

    # Set debian like DHCP and NFS service names
    /usr/share/drlm/conf/DHCP/config-DHCP.sh install
    if [ -f /etc/drlm/local.conf ]; then 
      if ! grep -v '^\s*$\|^\s*\#' /etc/drlm/local.conf | grep -q 'NFS_SVC_NAME="nfs-kernel-server"' ; then
        echo "NFS_SVC_NAME=\"nfs-kernel-server\"" >> /etc/drlm/local.conf
      fi
    fi

    #################
    # DRLM internal #
    #################

    # Create internal client to DB
    num_cli=$(echo "SELECT count(*) FROM clients WHERE idclient = 0;" | sqlite3 /var/lib/drlm/drlm.sqlite)
    if [ $num_cli -eq 0 ]; then
      echo "INSERT INTO clients (idclient, cliname, mac, ip, networks_netname, os, rear) VALUES (0, 'internal', '', '127.0.0.1', 'lo', '', '' ); " | sqlite3 /var/lib/drlm/drlm.sqlite
    fi
    # Generate client token to improve drlm-api security
    [ -f /etc/drlm/clients/internal.token ] || /usr/bin/tr -dc 'A-Za-z0-9' </dev/urandom | head -c 30 > /etc/drlm/clients/internal.token
    chmod 600 /etc/drlm/clients/internal.token
    # Generate client secrets
    [ -f /etc/drlm/clients/internal.secrets ] || echo "internal:$(cat /etc/drlm/clients/internal.token)" >> /etc/drlm/clients/internal.secrets
    chmod 600 /etc/drlm/clients/internal.secrets
    # Generate default configs
    [ -f /etc/drlm/clients/internal.cfg ] || cp /usr/share/drlm/conf/samples/drlm_internal_config-data_default.cfg /etc/drlm/clients/internal.cfg
    chmod 644 /etc/drlm/clients/internal.cfg
    [ -f /etc/drlm/clients/internal.drlm.cfg] || cp /usr/share/drlm/conf/samples/client_default.drlm.cfg /etc/drlm/clients/internal.drlm.cfg
    chmod 644 /etc/drlm/clients/internal.drlm.cfg
    [ -d /etc/drlm/clients/internal.cfg.d ] || mkdir /etc/drlm/clients/internal.cfg.d
    chmod 755 /etc/drlm/clients/internal.cfg.d
    [ -f /etc/drlm/clients/internal.cfg.d/iso.cfg ] || cp /usr/share/drlm/conf/samples/drlm_internal_full_dr_iso.cfg /etc/drlm/clients/internal.cfg.d/iso.cfg
    chmod 644 /etc/drlm/clients/internal.cfg.d/iso.cfg
    # Set internal network resolution
    sed -i '/127.0.0.1/s/localhost.*/localhost\tinternal/g' /etc/hosts
    # install & configure all client reqs.
    cat /root/.ssh/id_rsa.pub >> /root/.ssh/authorized_keys 
    drlm instclient -c internal
    [ -f /etc/rear/site.conf ] || cp /usr/share/drlm/conf/samples/drlm_internal_full_dr_site_conf.cfg /etc/rear/site.conf
    chmod 600 /etc/rear/site.conf
    num_jobs=$(echo "SELECT count(*) FROM jobs WHERE clients_id = 0;" | sqlite3 /var/lib/drlm/drlm.sqlite)
    if [ $num_jobs -eq 0 ]; then
      drlm addjob -c internal -s $(date -d "tomorrow" +'%Y-%m-%dT08:00') -r 1day
      drlm addjob -c internal -C iso -s $(date -d "next friday" +'%Y-%m-%dT12:00') -r 1month
      for job in $(echo "SELECT idjob FROM jobs WHERE clients_id = 0;" | sqlite3 -init <(echo .timeout 2000) /var/lib/drlm/drlm.sqlite); do drlm sched -d -I $job; done
    fi
    ;;

  *)
    echo "postinst called with unknown argument \`$1'" >&2
    exit 0
    ;;
    
esac

exit 0
