#drlm_completions
#Bash Completion file for DRLM

SHARE_DIR="/usr/share/drlm"
source $SHARE_DIR/conf/default.conf
[ -f /etc/drlm/site.conf  ] && source /etc/drlm/site.conf
[ -f /etc/drlm/local.conf ] && source /etc/drlm/local.conf
source $SHARE_DIR/lib/dbdrv/$DB_BACKEND-driver.sh

_drlm()
{
    local cur prev opts
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"
    workflows="addnetwork delnetwork listnetwork modnetwork addclient delclient listclient instclient modclient runbackup restore delbackup listbackup bkpmgr expbackup impbackup addjob listjob deljob sched scan archive oci"

    local workflow="$(__drlm_find_on_cmdline "$workflows")"
  if [ -z "$workflow" ]; then
     __drlmcomp "$workflows"
      return
  fi

  case "$workflow" in
    addnetwork)
      __drlm_addnetwork
      return
      ;;
    addclient)
      __drlm_addclient
      return
      ;;
    runbackup)
      __drlm_runbackup
      return
      ;;
    restore)
      __drlm_restore
      return
      ;;
    addjob)
      __drlm_addjob
      return
      ;;
    delnetwork)
      __drlm_delnetwork
      return
      ;;
    delclient)
      __drlm_delclient
      return
      ;;
    delbackup)
      __drlm_delbackup
      return
      ;;
    deljob)
      __drlm_deljob
      return
      ;;
    listnetwork)
      __drlm_listnetwork
      return
      ;;
    listclient)
      __drlm_listclient
      return
      ;;
    listbackup)
      __drlm_listbackup
      return
      ;;
    listjob)
      __drlm_listjob
      return
      ;;
    expbackup)
      __drlm_expbackup
      return
      ;;
    impbackup)
      __drlm_impbackup
      return
      ;;
    instclient)
      __drlm_instclient
      return
      ;;
    bkpmgr)
      __drlm_bkpmgr
      return
      ;;
    modclient)
      __drlm_modclient
      return
      ;;
    modnetwork)
      __drlm_modnetwork
      return
      ;;
    sched)
      __drlm_sched
      return
      ;;
    scan)
      __drlm_scan
      return
      ;;
    archive)
      __drlm_archive
      return
      ;;
    oci)
      __drlm_oci
      return
      ;;
    *)
      COMPREPLY=()
      ;;
  esac
}

__drlm_addnetwork ()
{
  local options_s="-n -i -g -m -s -h"
  local options_l="--netname --ip --gateway --mask --server --help"

  if __drlm_exist_option "-h --help" "$workflow"; then
    local options_s="-h"
    local options_l="--help"
  elif [ $(__drlm_count_options "$workflow" "$options_s $options_l") != "0" ]; then
    local options_s="-n -i -g -m -s"
    local options_l="--netname --ip --gateway --mask --server"
  fi

  case "$prev" in
    "-"*)
      COMPREPLY=()
      ;;
    *)
      __drlmcomp3 "$options_s" "$options_l"
      ;;
  esac
}

__drlm_addclient ()
{
  local options_s="-i -c -M -I -u -U -r -C -h"
  local options_l="--ipaddr --client --macaddr --installclient --user --url_rear --repo --config --help"

  if __drlm_exist_option "-h --help" "$workflow"; then
    local options_s="-h"
    local options_l="--help"
  elif __drlm_exist_option "-I --installclient" "$workflow"; then
    local options_s="-i -c -M -I -u -U -r -C"
    local options_l="--ipaddr --client --macaddr --installclient --user --url_rear --repo --config"
  elif [ $(__drlm_count_options "$workflow" "$options_s $options_l") != "0" ]; then
    local options_s="-i -c -M -I"
    local options_l="--ipaddr --client --macaddr --installclient"
  else
    local options_s="-i -c -M -I -h"
    local options_l="--ipaddr --client --macaddr --installclient --help"
  fi

  case "$prev" in
    -I | --installclient)
      __drlmcomp3 "$options_s" "$options_l"
      ;;
    "-"*)
      COMPREPLY=()
      ;;
    *)
      __drlmcomp3 "$options_s" "$options_l"
      ;;
  esac
}

__drlm_runbackup ()
{
  local options_s="-c -C -I -h"
  local options_l="--client --config --id --help"

  if __drlm_exist_option "-h --help" "$workflow"; then
    local options_s="-h"
    local options_l="--help"
  elif __drlm_exist_option "-I --id" "$workflow"; then
    local options_s="-I -C"
    local options_l="--id --config"
  elif __drlm_exist_option "-c --client" "$workflow"; then
    local options_s="-c -C"
    local options_l="--client --config"
  elif [ $(__drlm_count_options "$workflow" "$options_s $options_l") != "0" ]; then
    local options_s="-c -I"
    local options_l="--client --id"
  fi

  case "$prev" in
    -c | --client)
      local i=0
      query=$(get_all_client_names_dbdrv "$cur")
      for result in $query; do
        COMPREPLY[i++]="$result"
      done
      ;;
    -I | --id)
      local i=0
      query=$(get_all_client_id_dbdrv "$cur")
      for result in $query; do
        COMPREPLY[i++]="$result"
      done
      ;;
    -C | --config)
      local i=0
      prev3="${COMP_WORDS[COMP_CWORD-3]}"
      if [ "$prev3" == "-c" ]; then
        local client="${COMP_WORDS[COMP_CWORD-2]}"
        query=$(ls /etc/drlm/clients/$client.cfg.d/"$cur"*.cfg 2>/dev/null | xargs -n 1 basename 2>/dev/null | sed -e 's/\.cfg$//')
        for result in $query; do
          COMPREPLY[i++]="$result"
        done
      elif [ "$prev3" == "-I" ]; then
        local client_id="${COMP_WORDS[COMP_CWORD-2]}"
        client=$(get_client_name_dbdrv "$client_id")
        query=$(ls -1 /etc/drlm/clients/$client.cfg.d/"$cur"*.cfg 2>/dev/null | xargs -n 1 basename 2>/dev/null | sed -e 's/\.cfg$//')
        for result in $query; do
          COMPREPLY[i++]="$result"
        done
      fi
      ;;
    "-"*)
      COMPREPLY=()
      ;;
    *)
      __drlmcomp3 "$options_s" "$options_l"
      ;;
  esac
}

__drlm_restore ()
{
  local options_s="-c -C -I -h"
  local options_l="--client --config --id --help"

  if __drlm_exist_option "-h --help" "$workflow"; then
    local options_s="-h"
    local options_l="--help"
  elif __drlm_exist_option "-I --id" "$workflow"; then
    local options_s="-I -C"
    local options_l="--id --config"
  elif __drlm_exist_option "-c --client" "$workflow"; then
    local options_s="-c -C"
    local options_l="--client --config"
  elif [ $(__drlm_count_options "$workflow" "$options_s $options_l") != "0" ]; then
    local options_s="-c -I"
    local options_l="--client --id"
  fi

  case "$prev" in
    -c | --client)
      local i=0
      query=$(get_all_client_names_dbdrv "$cur")
      for result in $query; do
        COMPREPLY[i++]="$result"
      done
      ;;
    -I | --id)
      local i=0
      query=$(get_all_client_id_dbdrv "$cur")
      for result in $query; do
        COMPREPLY[i++]="$result"
      done
      ;;
    -C | --config)
      local i=0
      prev3="${COMP_WORDS[COMP_CWORD-3]}"
      if [ "$prev3" == "-c" ]; then
        local client="${COMP_WORDS[COMP_CWORD-2]}"
        query=$(ls /etc/drlm/clients/$client.cfg.d/"$cur"*.cfg 2>/dev/null | xargs -n 1 basename 2>/dev/null | sed -e 's/\.cfg$//')
        for result in $query; do
          COMPREPLY[i++]="$result"
        done
      elif [ "$prev3" == "-I" ]; then
        local client_id="${COMP_WORDS[COMP_CWORD-2]}"
        client=$(get_client_name_dbdrv "$client_id")
        query=$(ls -1 /etc/drlm/clients/$client.cfg.d/"$cur"*.cfg 2>/dev/null | xargs -n 1 basename 2>/dev/null | sed -e 's/\.cfg$//')
        for result in $query; do
          COMPREPLY[i++]="$result"
        done
      fi
      ;;
    "-"*)
      COMPREPLY=()
      ;;
    *)
      __drlmcomp3 "$options_s" "$options_l"
      ;;
  esac
}

__drlm_addjob ()
{
  local options_s="-c -C -s -e -r -h"
  local options_l="--client --config --start_date --end_date --repeat --help"

  if __drlm_exist_option "-h --help" "$workflow"; then
    local options_s="-h"
    local options_l="--help"
  elif [ $(__drlm_count_options "$workflow" "$options_s $options_l") != "0" ]; then
    local options_s="-c -C -s -e -r"
    local options_l="--client --config --start_date --end_date --repeat"
  fi

  case "$prev" in
    -c | --client)
      local i=0
      query=$(get_all_client_names_dbdrv "$cur")
      for result in $query; do
        COMPREPLY[i++]="$result"
      done
      ;;
    -C | --config)
      local i=0
      local j=${#COMP_WORDS[@]}
      j=$((j-4))
      while [ "${COMP_WORDS[$j]}" != "-c" ] && [ "$j" -gt "0" ]; do
        j=$((j-1))
      done
      if [ "$j" -gt "0" ]; then
        j=$((j+1))
        local client="${COMP_WORDS[$j]}"
        query=$(ls -1 /etc/drlm/clients/$client.cfg.d/"$cur"*.cfg 2>/dev/null | xargs -n 1 basename 2>/dev/null | sed -e 's/\.cfg$//')
        for result in $query; do
          COMPREPLY[i++]="$result"
        done
      fi
      ;;
    -I | --installclient)
      __drlmcomp3 "$options_s" "$options_l"
      ;;
    "-"*)
      COMPREPLY=()
      ;;
    *)
      __drlmcomp3 "$options_s" "$options_l"
      ;;
  esac
}

__drlm_delnetwork ()
{
  local options_s="-n -I -h"
  local options_l="--netname --id --help"

  if __drlm_exist_option "-h --help" "$workflow"; then
    local options_s="-h"
    local options_l="--help"
  elif  __drlm_exist_option "-n --netname" "$workflow"; then
    local options_s="-n"
    local options_l="--netname"
  elif  __drlm_exist_option "-I --id" "$workflow"; then
    local options_s="-I"
    local options_l="--id"
  fi

  case "$prev" in
    -n | --netname)
      local i=0
      query=$(get_all_network_names_dbdrv "$cur")
      for result in $query; do
        COMPREPLY[i++]="$result"
      done
      ;;
    -I | --id)
      local i=0
      query=$(get_all_network_id_dbdrv "$cur")
      for result in $query; do
        COMPREPLY[i++]="$result"
      done
      ;;
    *)
      __drlmcomp3 "$options_s" "$options_l"
      ;;
  esac
}

__drlm_delclient ()
{
  local options_s="-c -I -h"
  local options_l="--client --id --help"

  if __drlm_exist_option "-h --help" "$workflow"; then
    local options_s="-h"
    local options_l="--help"
  elif  __drlm_exist_option "-c --client" "$workflow"; then
    local options_s="-c"
    local options_l="--client"
  elif  __drlm_exist_option "-I --id" "$workflow"; then
    local options_s="-I"
    local options_l="--id"
  fi

  case "$prev" in
    -c | --client)
      local i=0
      query=$(get_all_client_names_dbdrv "$cur")
      for result in $query; do
        COMPREPLY[i++]="$result"
      done
      ;;
    -I | --id)
      local i=0
      query=$(get_all_client_id_dbdrv "$cur")
      for result in $query; do
        COMPREPLY[i++]="$result"
      done
      ;;
    *)
      __drlmcomp3 "$options_s" "$options_l"
      ;;
  esac
}

__drlm_delbackup ()
{
  local options_s="-c -I -A -h"
  local options_l="--client --id -all --help"

  if __drlm_exist_option "-h --help" "$workflow"; then
    local options_s="-h"
    local options_l="--help"
  elif __drlm_exist_option "-A --all" "$workflow"; then
    local options_s="-c -A"
    local options_l="--client --all"
  elif __drlm_exist_option "-I --id" "$workflow"; then
    local options_s="-I"
    local options_l="--id"
  fi

  case "$prev" in
    -c | --client)
      local i=0
      query=$(get_all_client_names_in_backups_dbdrv "$cur")
      for result in $query; do
        COMPREPLY[i++]="$result"
      done
      ;;
    -I | --id)

      if __drlm_exist_option "-c --client" "$workflow"; then
        # if exists -c Get client name
        local i=0
        client=""
        while [ "$client" == "" ]; do
          if [ "${COMP_WORDS[i]}" == "-c" ]; then
            ((i++))
            client="${COMP_WORDS[i]}"
          else
            ((i++))
          fi
        done

        query=$(get_all_backup_id_by_client_dbdrv "$client" "$cur")
        local i=0
        for result in $query; do
          COMPREPLY[i++]="$result"
        done
        query=$(get_all_snap_id_by_client_dbdrv "$client" "$cur")
        for result in $query; do
          COMPREPLY[i++]="$result"
        done
      else
        query=$(get_all_backup_id_dbdrv "$cur")
        local i=0
        for result in $query; do
          COMPREPLY[i++]="$result"
        done
        query=$(get_all_snap_id_dbdrv "$cur")
        for result in $query; do
          COMPREPLY[i++]="$result"
        done
      fi
      ;;
    *)
      __drlmcomp3 "$options_s" "$options_l"
      ;;
  esac
}

__drlm_deljob ()
{
  local options_s="-c -J -I -h"
  local options_l="--client --job_id --help"

  if __drlm_exist_option "-h --help" "$workflow"; then
    local options_s="-h"
    local options_l="--help"
  elif __drlm_exist_option "-c --client" "$workflow"; then
    local options_s="-c"
    local options_l="--client"
  elif __drlm_exist_option "-J -I --job_id" "$workflow"; then
    local options_s="-J -I"
    local options_l="--job_id"
  fi

  case "$prev" in
    -c | --client)
      local i=0
      query=$(get_all_client_names_in_jobs_dbdrv "$cur")
      for result in $query; do
        COMPREPLY[i++]="$result"
      done
      ;;
    -J | -I | --job_id)
      local i=0
      query=$(get_all_jobs_id_dbdrv "$cur")
      for result in $query; do
        COMPREPLY[i++]="$result"
      done
      ;;
    *)
      __drlmcomp3 "$options_s" "$options_l"
      ;;
  esac
}

__drlm_listnetwork ()
{
  local options_s="-n -A -h"
  local options_l="--netname --all --help"

  if __drlm_exist_option "-h --help" "$workflow"; then
    local options_s="-h"
    local options_l="--help"
  elif __drlm_exist_option "-n --netname" "$workflow"; then
    local options_s="-n"
    local options_l="--netname"
  elif __drlm_exist_option "-A --all" "$workflow"; then
    local options_s="-A"
    local options_l="--all"
  fi

  case "$prev" in
    -n | --netname)
      local i=0
      query=$(get_all_network_names_dbdrv "$cur")
      for result in $query; do
        COMPREPLY[i++]="$result"
      done
      ;;
    *)
      __drlmcomp3 "$options_s" "$options_l"
      ;;
  esac
}

__drlm_listclient ()
{
  local options_s="-c -A -U -p -h"
  local options_l="--client --all --unsched --pretty --help"

  if __drlm_exist_option "-h --help" "$workflow"; then
    local options_s="-h"
    local options_l="--help"
  elif __drlm_exist_option "-c --client" "$workflow"; then
    local options_s="-U -p"
    local options_l="--unsched --pretty"
  elif __drlm_exist_option "-A --all" "$workflow"; then
    local options_s="-A -U -p"
    local options_l="--all --unsched --pretty"
  elif __drlm_exist_option "-U --unsched" "$workflow"; then
    local options_s="-U -p -A"
    local options_l="--unsched --pretty --all"
  elif __drlm_exist_option "-p --pretty" "$workflow"; then
    local options_s="-p -U -A"
    local options_l="--pretty --unsched --all"
  fi

  case "$prev" in
    -c | --client)
      local i=0
      query=$(get_all_client_names_dbdrv "$cur")
      for result in $query; do
        COMPREPLY[i++]="$result"
      done
      ;;
    *)
      __drlmcomp3 "$options_s" "$options_l"
      ;;
  esac
}

__drlm_listbackup ()
{
  local options_s="-c -A -p -P -h"
  local options_l="--client --all --pretty --policy --help"

  if __drlm_exist_option "-h --help" "$workflow"; then
    local options_s="-h"
    local options_l="--help"
  elif __drlm_exist_option "-c --client" "$workflow"; then
    local options_s="-c -p -P"
    local options_l="--client --pretty --policy"
  elif __drlm_exist_option "-A --all" "$workflow"; then
    local options_s="-A -p -P"
    local options_l="--all --pretty --policy"
  elif __drlm_exist_option "-p --pretty" "$workflow"; then
    local options_s="-p -c -A -P"
    local options_l="--pretty --client --all --policy"
  fi

  case "$prev" in
    -c | --client)
      local i=0
      query=$(get_all_client_names_in_backups_dbdrv "$cur")
      for result in $query; do
        COMPREPLY[i++]="$result"
      done
      ;;
    *)
      __drlmcomp3 "$options_s" "$options_l"
      ;;
  esac
}

__drlm_listjob ()
{
  local options_s="-c -J -I -A -h"
  local options_l="--client --job_id --all --help"

  if __drlm_exist_option "-h --help" "$workflow"; then
    local options_s="-h"
    local options_l="--help"
  elif __drlm_exist_option "-c --client" "$workflow"; then
    local options_s="-c"
    local options_l="--client"
  elif __drlm_exist_option "-J -I --job_id" "$workflow"; then
    local options_s="-J -I"
    local options_l="--job_id"  
  elif __drlm_exist_option "-A --all" "$workflow"; then
    local options_s="-A"
    local options_l="--all"
  fi

  case "$prev" in
    -c | --client)
      local i=0
      query=$(get_all_client_names_in_jobs_dbdrv "$cur")
      for result in $query; do
        COMPREPLY[i++]="$result"
      done
      ;;
    -J | -I | --job_id)
      local i=0
      query=$(get_all_jobs_id_dbdrv "$cur")
      for result in $query; do
        COMPREPLY[i++]="$result"
      done
      ;;
    *)
      __drlmcomp3 "$options_s" "$options_l"
      ;;
  esac
}

__drlm_expbackup ()
{
  local options_s="-I -f -h"
  local options_l="--id --file --help"

  if __drlm_exist_option "-h --help" "$workflow"; then
    local options_s="-h"
    local options_l="--help"
  elif [ $(__drlm_count_options "$workflow" "$options_s $options_l") != "0" ]; then
    local options_s="-I -f"
    local options_l="--id --file"
  fi

  case "$prev" in
    -I | --id)
      local i=0
      query=$(get_all_backup_id_dbdrv "$cur")
      for result in $query; do
        COMPREPLY[i++]="$result"
      done
      ;;
    -f | --file)
      _filedir
      ;;
    *)
      __drlmcomp3 "$options_s" "$options_l"
      ;;
  esac
}

__drlm_impbackup ()
{
  local options_s="-c -f -I -h -C -i -k -K"
  local options_l="--client --file  --id --help --config --import-config --key --key-file"

  if __drlm_exist_option "-h --help" "$workflow"; then
    local options_s="-h"
    local options_l="--help"
  elif __drlm_exist_option "-f --file" "$workflow"; then
    local options_s="-c -f -C -i -k -K"
    local options_l="--client --file --config --import-config --key --key-file"
  elif __drlm_exist_option "-I --id" "$workflow"; then
    local options_s="-c -I -C -i"
    local options_l="--client --id --config --import-config"
  elif [ $(__drlm_count_options "$workflow" "$options_s $options_l") != "0" ]; then
    local options_s="-c -f -I -C -i -k -K"
    local options_l="--client --file --id --config --import-config --key --key-file"
  fi

  case "$prev" in
    -c | --client)
      local i=0
      query=$(get_all_client_names_dbdrv "$cur")
      for result in $query; do
        COMPREPLY[i++]="$result"
      done
      ;;
    -C | --config)
      local i=0

      ### Find client name in command line
      local j=0
      local found="false"
      for word in "${COMP_WORDS[@]}"; do
        if [ "$word" == "-c" ] || [ "$word" == "--client" ] ; then
          found="true"
          ((j++))
          break
        else
          ((j++))
        fi
      done
      
      ### If client found get his configurations
      if [ "$found" == "true" ]; then 
        client="${COMP_WORDS[j]}"
        query=$(ls /etc/drlm/clients/$client.cfg.d/"$cur"*.cfg 2>/dev/null | xargs -n 1 basename 2>/dev/null | sed -e 's/\.cfg$//')
        for result in $query; do
          COMPREPLY[i++]="$result"
        done
      fi
      ;;
    -f | --file)
      _filedir
      ;;
    -K | --key-file)
      _filedir
      ;;
    -I | --id)
      local i=0
      query=$(get_all_backup_id_dbdrv "$cur")
      for result in $query; do
        COMPREPLY[i++]="$result"
      done
      ;;
    *)
      __drlmcomp3 "$options_s" "$options_l"
      ;;
  esac
}

__drlm_instclient ()
{
  local options_s="-c -I -u -U -r -C -h"
  local options_l="--client --id --user --url_rear --repo --config --help"

  if __drlm_exist_option "-h --help" "$workflow"; then
    local options_s="-h"
    local options_l="--help"
  elif __drlm_exist_option "-c --client" "$workflow"; then
    local options_s="-c -u -U -r -C"
    local options_l="--client --user --url_rear --repo --config"
  elif __drlm_exist_option "-I --id" "$workflow"; then
    local options_s="-I -u -U -r -C"
    local options_l="--id --user --url_rear --repo --config"
  elif __drlm_exist_option "-C --config" "$workflow"; then
    local options_s="-C -c -I -u"
    local options_l="--config --clinet --id --user"
  elif __drlm_exist_option "-U --url_rear" "$workflow"; then
    local options_s="-U -I -u"
    local options_l="--url_rear --id --user"
  elif __drlm_exist_option "-r --repo" "$workflow"; then
    local options_s="-r -I -u"
    local options_l="--repo --id --user"
  elif [ $(__drlm_count_options "$workflow" "$options_s $options_l") != "0" ]; then
    local options_s="-c -I -u -U -r -C"
    local options_l="--client --id --user --url_rear --repo --config"
  fi

  case "$prev" in
    -c | --client)
      local i=0
      query=$(get_all_client_names_dbdrv "$cur")
      for result in $query; do
        COMPREPLY[i++]="$result"
      done
      ;;
    -I | --id)
      local i=0
      query=$(get_all_client_id_dbdrv "$cur")
      for result in $query; do
        COMPREPLY[i++]="$result"
      done
      ;;
    "-"*)
      COMPREPLY=()
      ;;
    *)
      __drlmcomp3 "$options_s" "$options_l"
      ;;
  esac
}

__drlm_bkpmgr ()
{
  local options_s="-c -I -e -d -w -W -H -h"
  local options_l="--client --id --enable --disable --write --full-write --hold-on --hold-off --help"

  if __drlm_exist_option "-h --help" "$workflow"; then
    local options_s="-h"
    local options_l="--help"
  elif __drlm_exist_option "-I --id" "$workflow"; then
    local options_s="-I -e -d -w -W -H"
    local options_l="--id --enable --disable --write --full-write --hold-on --hold-off"
    if __drlm_exist_option "-e --enable -d --disable -w --write -W --full-write -H --hold-on --hold-off" "$workflow"; then
      local options_s="-I"
      local options_l="--id"
    fi
  elif __drlm_exist_option "-e --enable -d --disable -w --write -W --full-write -H --hold-on --hold-off" "$workflow"; then
    local options_s="-I"
    local options_l="--id"
  elif [ $(__drlm_count_options "$workflow" "$options_s $options_l") != "0" ]; then
    local options_s="-c -I -e -d -w -W -H"
    local options_l="--client --id --enable --disable --write --full-write --hold-on --hold-off"
  fi

  case "$prev" in
    -c | --client)
      local i=0
      query=$(get_all_client_names_in_backups_dbdrv "$cur")
      for result in $query; do
        COMPREPLY[i++]="$result"
      done
      ;;
    -I | --id)
      if __drlm_exist_option "-c --client" "$workflow"; then
        # if exists -c Get client name
        local i=0
        client=""
        while [ "$client" == "" ]; do
          if [ "${COMP_WORDS[i]}" == "-c" ]; then
            ((i++))
            client="${COMP_WORDS[i]}"
          else
            ((i++))
          fi
        done

        # check if $client exists
        if exist_client_name_dbdrv "$client"; then
          if __drlm_exist_option "-e --enable" "$workflow"; then
            query=$(get_all_backup_disabled_id_by_client_dbdrv "$client" "$cur")
            local i=0
            for result in $query; do
              COMPREPLY[i++]="$result"
            done
            query=$(get_all_snap_disabled_id_by_client_dbdrv "$client" "$cur")
            for result in $query; do
              COMPREPLY[i++]="$result"
            done
          elif __drlm_exist_option "-d --disable" "$workflow"; then
            query=$(get_all_backup_enabled_id_by_client_dbdrv "$client" "$cur")
            local i=0
            for result in $query; do
              COMPREPLY[i++]="$result"
            done
            query=$(get_all_snap_enabled_id_by_client_dbdrv "$client" "$cur")
            for result in $query; do
              COMPREPLY[i++]="$result"
            done
          else
            query=$(get_all_backup_id_by_client_dbdrv "$client" "$cur")
            local i=0
            for result in $query; do
              COMPREPLY[i++]="$result"
            done
            query=$(get_all_snap_id_by_client_dbdrv "$client" "$cur")
            for result in $query; do
              COMPREPLY[i++]="$result"
            done
          fi         
        fi
      else
        if __drlm_exist_option "-e --enable" "$workflow"; then
          query=$(get_all_not_enable_backup_id_dbdrv "$cur")
          local i=0
          for result in $query; do
            COMPREPLY[i++]="$result"
          done
          query=$(get_all_snap_disabled_id_dbdrv "$cur")
          for result in $query; do
            COMPREPLY[i++]="$result"
          done
        elif __drlm_exist_option "-d --disable" "$workflow"; then
          query=$(get_all_backup_enabled_id_dbdrv "$cur")
          local i=0
          for result in $query; do
            COMPREPLY[i++]="$result"
          done
          query=$(get_all_snap_enabled_id_dbdrv "$cur")
          for result in $query; do
            COMPREPLY[i++]="$result"
          done
        elif __drlm_exist_option "-w --write" "$workflow"; then
          query=$(get_all_not_write_backup_id_dbdrv "$cur")
          local i=0
          for result in $query; do
            COMPREPLY[i++]="$result"
          done
        elif __drlm_exist_option "-W --full-write" "$workflow"; then
          query=$(get_all_not_full_write_backup_id_dbdrv "$cur")
          local i=0
          for result in $query; do
            COMPREPLY[i++]="$result"
          done
        else
          query=$(get_all_backup_id_dbdrv "$cur")
          local i=0
          for result in $query; do
            COMPREPLY[i++]="$result"
          done
          query=$(get_all_snap_id_dbdrv "$cur")
          for result in $query; do
            COMPREPLY[i++]="$result"
          done
        fi
      fi
      ;;
    *)
      __drlmcomp3 "$options_s" "$options_l"
      ;;
  esac
}

__drlm_modclient ()
{
  local options_s="-c -I -i -M -n -h -a -d"
  local options_l="--client --id --ip --macaddr --netname --help --add --del"

  if __drlm_exist_option "-h --help" "$workflow"; then
    local options_s="-h"
    local options_l="--help"
  elif __drlm_exist_option "-c --client" "$workflow"; then
    local options_s="-c -i -M -n"
    local options_l="--client --ip --macaddr --netname"
  elif __drlm_exist_option "-I --id" "$workflow"; then
    local options_s="-I -i -M -n -a -d"
    local options_l="--id --ip --macaddr --netname --add --del"
  elif __drlm_exist_option "-a --add" "$workflow"; then
    local options_s="-I -a"
    local options_l="--id --add"
  elif __drlm_exist_option "-d --del" "$workflow"; then
    local options_s="-I -d"
    local options_l="--id --del"
  elif [ $(__drlm_count_options "$workflow" "$options_s $options_l") != "0" ]; then
    local options_s="-c -I -i -M -n -a -d"
    local options_l="--client --id --ip --macaddr --netname --add --del"
  fi

  case "$prev" in
    -c | --client)
      local i=0
      query=$(get_all_client_names_dbdrv "$cur")
      for result in $query; do
        COMPREPLY[i++]="$result"
      done
      ;;
    -I | --id | -a | --add | -d | --del)
      local i=0
      query=$(get_all_client_id_dbdrv "$cur")
      for result in $query; do
        COMPREPLY[i++]="$result"
      done
      ;;
    -n | --netname)
      local i=0
      query=$(get_all_network_names_dbdrv "$cur")
      for result in $query; do
        COMPREPLY[i++]="$result"
      done
      ;;
    "-"*)
      COMPREPLY=()
      ;;
    *)
      __drlmcomp3 "$options_s" "$options_l"
      ;;
  esac
}

__drlm_modnetwork ()
{
  local options_s="-n -I -g -m -s -h -e -d"
  local options_l="--netname --id --gateway --mask --server --help --enable --disable"

  if __drlm_exist_option "-h --help" "$workflow"; then
    local options_s="-h"
    local options_l="--help"
  elif __drlm_exist_option "-e --enable" "$workflow"; then
    local options_s="-I -n -g -m -s"
    local options_l="--id --netname --gateway --mask --server"
  elif __drlm_exist_option "-d --disable" "$workflow"; then
    local options_s="-n -I -g -m -s"
    local options_l="--name --id --gateway --mask --server"
  elif [ $(__drlm_count_options "$workflow" "$options_s $options_l") != "0" ]; then
    local options_s="-n -I -g -m -s -e -d"
    local options_l="--netname --id --gateway --mask --server --enable --disable"
  fi

  case "$prev" in
    -n | --netname)
      local i=0
      query=$(get_all_network_names_dbdrv "$cur")
      for result in $query; do
        COMPREPLY[i++]="$result"
      done
      ;;
    -I | --id)
      if __drlm_exist_option "-e --enable" "$workflow"; then
        query=$(get_all_network_disabled_id_dbdrv "$cur")
        local i=0
        for result in $query; do
          COMPREPLY[i++]="$result"
        done
      elif __drlm_exist_option "-d --disable" "$workflow"; then
        query=$(get_all_network_enabled_id_dbdrv "$cur")
        local i=0
        for result in $query; do
          COMPREPLY[i++]="$result"
        done
      else
        query=$(get_all_network_id_dbdrv "$cur")
        local i=0
        for result in $query; do
          COMPREPLY[i++]="$result"
        done
      fi

      ;;
    -e | -d | --enable | --disable)
      __drlmcomp3 "$options_s" "$options_l"
      ;;
    "-"*)
      COMPREPLY=()
      ;;
    *)
      __drlmcomp3 "$options_s" "$options_l"
      ;;
  esac
}

__drlm_sched ()
{
  local options_s="-e -d -r -I -h"
  local options_l="--enable --disable --run --job_id --help"

  if __drlm_exist_option "-h --help" "$workflow"; then
    local options_s="-h"
    local options_l="--help"
  elif __drlm_exist_option "-e --enable" "$workflow"; then
    local options_s="-e -I"
    local options_l="--enable --job_id"
  elif __drlm_exist_option "-d --disable" "$workflow"; then
    local options_s="-d -I "
    local options_l="--disable --job_id"
  elif __drlm_exist_option "-r --run" "$workflow"; then
    local options_s="-r"
    local options_l="--run"
  fi

  case "$prev" in
    -I | --job_id)
      if __drlm_exist_option "-e --enable" "$workflow"; then
        local i=0
        query=$(get_all_disabled_jobs_id_dbdrv "$cur")
        for result in $query; do
          COMPREPLY[i++]="$result"
        done
      else
        local i=0
        query=$(get_all_enabled_jobs_id_dbdrv "$cur")
        for result in $query; do
          COMPREPLY[i++]="$result"
        done
      fi
      ;;
    *)
      __drlmcomp3 "$options_s" "$options_l"
      ;;
  esac
}

__drlm_scan ()
{
  local options_s="-c -I -h"
  local options_l="--client --id --help"

  if __drlm_exist_option "-h --help" "$workflow"; then
    local options_s="-h"
    local options_l="--help"
  elif __drlm_exist_option "-I --id" "$workflow"; then
    local options_s="-I"
    local options_l="--id"
  elif __drlm_exist_option "-c --client" "$workflow"; then
    local options_s="-c"
    local options_l="--client"
  elif [ $(__drlm_count_options "$workflow" "$options_s $options_l") != "0" ]; then
    local options_s="-c -I"
    local options_l="--client --id"
  fi

  case "$prev" in
    -c | --client)
      local i=0
      query=$(get_all_client_names_dbdrv "$cur")
      for result in $query; do
        COMPREPLY[i++]="$result"
      done
      ;;
    -I | --id)
      local i=0
      query=$(get_all_backup_id_dbdrv "$cur")
      for result in $query; do
        COMPREPLY[i++]="$result"
      done
      ;;
    "-"*)
      COMPREPLY=()
      ;;
    *)
      __drlmcomp3 "$options_s" "$options_l"
      ;;
  esac
}

__drlm_archive ()
{
  local options_s="-c -I -h"
  local options_l="--client --id --help"

  if __drlm_exist_option "-h --help" "$workflow"; then
    local options_s="-h"
    local options_l="--help"
  elif __drlm_exist_option "-I --id" "$workflow"; then
    local options_s="-I"
    local options_l="--id"
  elif __drlm_exist_option "-c --client" "$workflow"; then
    local options_s="-c"
    local options_l="--client"
  elif [ $(__drlm_count_options "$workflow" "$options_s $options_l") != "0" ]; then
    local options_s="-c -I"
    local options_l="--client --id"
  fi

  case "$prev" in
    -c | --client)
      local i=0
      query=$(get_all_client_names_dbdrv "$cur")
      for result in $query; do
        COMPREPLY[i++]="$result"
      done
      ;;
    -I | --id)
      local i=0
      query=$(get_all_backup_id_dbdrv "$cur")
      for result in $query; do
        COMPREPLY[i++]="$result"
      done
      ;;
    "-"*)
      COMPREPLY=()
      ;;
    *)
      __drlmcomp3 "$options_s" "$options_l"
      ;;
  esac
}

__drlm_oci ()
{
  local options_l="--enable --disable --disableUP --connect --disconnect --status --statusInstance --startInstance --stopInstance --help"

  if __drlm_exist_option "--help" "$workflow"; then
    local options_l="--help"
  fi

  case "$prev" in
    "-"*)
      COMPREPLY=()
      ;;
    *)
      __drlmcomp3 "$options_l"
      ;;
  esac
}

__drlm_find_on_cmdline ()
{
  local word workflow c=1
  while [ $c -lt $COMP_CWORD ]; do
    word="${COMP_WORDS[c]}"
    for workflow in $1; do
      if [ "$workflow" == "$word" ]; then
        echo "$workflow"
        return
      fi
    done
    ((c++))
  done
}

#function to search an option list ($1) in the command line after one workflow ($2)
#especified. If an option of the list is found returns 0 else returns 1.

__drlm_exist_option ()
{
  local word j res=1 i=1
  word="${COMP_WORDS[i]}"

  while [ "$2" != "$word" ]; do
    ((i++))
    word="${COMP_WORDS[i]}"
  done

  for wordf in $1; do
    j=$i
    while [ "$wordf" != "$word" ] && [ $j -lt $COMP_CWORD ]; do
      ((j++))
      word="${COMP_WORDS[j]}"
    done
    if [ $j -lt $COMP_CWORD ]; then
      return 0
    fi
    word="${COMP_WORDS[i]}"
  done

  return 1
}

#function to count the number of occurrences of a list of paremeters ($2)
#in the commandline after the workflow ($1)

__drlm_count_options ()
{
  local word i=1 k=0
  word="${COMP_WORDS[i]}"

  while [ "$1" != "$word" ]; do
    ((i++))
    word="${COMP_WORDS[i]}"
  done

  while [ $i -lt $COMP_CWORD ]; do
    for comm in $2; do
      if [ "$comm" == "$word" ]; then
        ((k++))
      fi
    done
    ((i++))
    word="${COMP_WORDS[i]}"
  done

  echo $k
}

#afegeix una paraula a les possibles a contestar

__drlmcomp ()
{
  local c i=0
  for c in $1; do
    if [[ $c == "$cur"* ]]; then
      COMPREPLY[i++]="$c"
    fi
  done
}

#functions to add options without reps to COMPREPLY

__drlmcomp2 ()
{
  local c i=0
  for c in $1; do
    if [[ $c == "$cur"* ]]; then
      if ! __drlm_exist_option "$c" "$workflow"; then
        COMPREPLY[i++]="$c"
      fi
    fi
  done
}

#functions to add paired options (short (-n) and long format (--name))
#without reps to COMPREPLY

__drlmcomp3 ()
{
  local word_s word_l arr_s arr_l i=0 j=0
  arr_s=($1)
  arr_l=($2)
  word_s="${arr_s[i]}"
  word_l="${arr_l[i]}"

  while [ $i -lt ${#arr_s[@]} ]; do
    word_s="${arr_s[i]}"
    word_l="${arr_l[i]}"
    if [[ $word_s == "$cur"* ]]; then
      if ! __drlm_exist_option "$word_s" "$workflow"; then
        if ! __drlm_exist_option "$word_l" "$workflow"; then
          COMPREPLY[j++]="$word_s"
        fi
      fi
    fi
    if [[ $word_l == "$cur"* ]]; then
      if ! __drlm_exist_option "$word_l" "$workflow"; then
        if ! __drlm_exist_option "$word_s" "$workflow"; then
          COMPREPLY[j++]="$word_l"
        fi
      fi
    fi
    ((i++))
  done
}

complete -F _drlm drlm
